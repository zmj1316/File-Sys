<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\Cortex-M3 Execute for lpc1700.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\Cortex-M3 Execute for lpc1700.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Sat Nov 19 19:12:12 2011
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[cf31b0]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16c2260]">__main</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf64c8]">svcallHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6018]">__s_OSCtxSw</a>
 <LI><a href="#[cf5fdc]">__sysTickIsr</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf8a0c]">usbHostException</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6540]">defaultVectorHandle</a>
 <LI><a href="#[cf6018]">__s_OSCtxSw</a>
 <LI><a href="#[156e54c]">__s_OSStartHighRdy</a>
 <LI><a href="#[156e510]">__s_OS_ENTER_CRITICAL</a>
 <LI><a href="#[156e4d4]">__s_OS_EXIT_CRITICAL</a>
 <LI><a href="#[156e498]">__s_changeToSYSMode</a>
 <LI><a href="#[cf8a0c]">usbHostException</a>
 <LI><a href="#[cf64c8]">svcallHandle</a>
 <LI><a href="#[cf6018]">__s_OSCtxSw</a>
 <LI><a href="#[cf64c8]">svcallHandle</a>
 <LI><a href="#[156e45c]">taskEntry</a>
 <LI><a href="#[16c0b2c]">_sputc</a>
 <LI><a href="#[16c0c94]">_printf_input_char</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[16c2260]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[16ba088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[16c1f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[16ba088]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[16c2260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16ba04c]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c1f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[16ba010]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16b9fd4]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16b9e30]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b9e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[16b9e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[16b9d40]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[16c29a4]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16c3250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[16c2a94]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[16c3fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[16c0a78]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[16bcc20]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16bea5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[16bfe0c]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[16bf524]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[16bf59c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[16bf95c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[16bf7f4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[16bf434]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[16bf4ac]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[16bf86c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[16bf77c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[16bfd58]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[16bfbb4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[16bfb3c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[16bfac4]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[16bfa4c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[16bf9d4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[16bfc68]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[16bf3f8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[16bf8e4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[16bf704]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[16bfce0]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[16ba3d0]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16bb618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[16bbc6c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[16bba8c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[16bba50]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[16bbbb8]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[16bbd20]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[16bbb40]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[16c1f18]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16ba04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[16c2260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16beb10]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[16be78c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[16bd88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16bea5c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[16bcc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[16bea98]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[16be9a8]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[16bd454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16be9e4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[16bc6bc]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16bd454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16bb618]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[16ba3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[16bb654]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[16bb5dc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[cf0f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[cf64c8]"></a>svcallHandle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 3]<UL><LI> vector_table.o(.constdata)
<LI> target.o(.text)
<LI> os_cpu_c.o(.text)
</UL>
<P><STRONG><a name="[156e588]"></a>__OSStartHighRdy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[ced4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>

<P><STRONG><a name="[156e54c]"></a>__s_OSStartHighRdy</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[156e420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[cf6018]"></a>__s_OSCtxSw</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[156e420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 3]<UL><LI> vector_table.o(.constdata)
<LI> os_cpu_c.o(.emb_text)
<LI> os_cpu_c.o(.text)
</UL>
<P><STRONG><a name="[156e510]"></a>__s_OS_ENTER_CRITICAL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[156e4d4]"></a>__s_OS_EXIT_CRITICAL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[156e498]"></a>__s_changeToSYSMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[cf3444]"></a>changeToUSRMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[cf3e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[cf3e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[cf3e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
<LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>

<P><STRONG><a name="[156e45c]"></a>taskEntry</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = taskEntry &rArr; OSTaskDel &rArr; OS_FlagUnlink
</UL>
<BR>[Calls]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.text)
</UL>
<P><STRONG><a name="[cf9114]"></a>EnumSucessCallBack</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbIsDeviceReady
<LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
<LI><a href="#[cf8a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0StrSend
<LI><a href="#[cf8a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Init
<LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinInit
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostInit
<LI><a href="#[cf8bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostDeInit
<LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[cf8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[cf8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAT_filesystem_initialiation
<LI><a href="#[16c4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[16be4f8]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[cf90d8]"></a>DevDisconCallBack</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0StrSend
</UL>

<P><STRONG><a name="[cf909c]"></a>usbHostTestInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
<LI><a href="#[cf8a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0StrSend
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK1
</UL>

<P><STRONG><a name="[cf9060]"></a>usbHostTest</STRONG> (Thumb, 322 bytes, Stack size 680 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbIsDeviceReady
<LI><a href="#[cf8a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0StrSend
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostInit
<LI><a href="#[cf8bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostDeInit
<LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[cf8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAT_filesystem_initialiation
<LI><a href="#[16c4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK1
</UL>

<P><STRONG><a name="[cf9024]"></a>TASK1</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Init
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTestInit
</UL>

<P><STRONG><a name="[cf8fe8]"></a>TASK0</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[cf8fac]"></a>main</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[cf8b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinInit
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[cf8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16be9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[cf8b38]"></a>pinInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc1700pincfg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf6900]"></a>pconpInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc1700pincfg.o(.text), UNUSED)

<P><STRONG><a name="[cf6540]"></a>defaultVectorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[cf8ac0]"></a>targetInit</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = targetInit &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[cf648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIfInit
<LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf648c]"></a>zyIfInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
</UL>

<P><STRONG><a name="[cf3ed0]"></a>zyReset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)

<P><STRONG><a name="[cf6450]"></a>zyIrqDisable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[cf3de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[cf3e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[cf3e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[cf3e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
<LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
</UL>

<P><STRONG><a name="[cf6414]"></a>zyIrqEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[cf3de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[cf3e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[cf3e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[cf3e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
<LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
</UL>

<P><STRONG><a name="[cf891c]"></a>zyIsrSet</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, zy_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[cf3444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[ced4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[cf8ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[cf909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTestInit
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf3e94]"></a>__s_zyIsrClr</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[cf3e58]"></a>__s_zyIsrDisable</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[cf3e1c]"></a>zyIsrEnable</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[cf3de0]"></a>zyHeapMalloc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[16c5d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[cf3d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[cf3da4]"></a>zyHeapFree</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[16c5c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgDel
<LI><a href="#[cf3a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
</UL>

<P><STRONG><a name="[cf3d68]"></a>zyThreadCreate</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[cf3750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[cf378c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[cf3de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[cf3d2c]"></a>zyThreadGetCurId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
</UL>

<P><STRONG><a name="[cf3cf0]"></a>zyThreadDel</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[cf3750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[cf378c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[cf3d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadGetCurId
<LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[cf6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[cf6450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[cf3cb4]"></a>zyThreadSuspendSelf</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf34bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
</UL>

<P><STRONG><a name="[cf3c78]"></a>zyThreadResume</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf34f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>

<P><STRONG><a name="[cf3c3c]"></a>zyThreadSuspendCheck</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, zy_if.o(.text), UNUSED)

<P><STRONG><a name="[cf3c00]"></a>zyThreadDelay</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[cf3bc4]"></a>zySemCreate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf36d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>

<P><STRONG><a name="[cf3b88]"></a>zySemDel</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf369c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>

<P><STRONG><a name="[cf3b4c]"></a>zySemAccept</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
</UL>

<P><STRONG><a name="[cf3b10]"></a>zySemPend</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[cf3ad4]"></a>zySemPost</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[cf3a98]"></a>zyMsgCreate</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[cf387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[cf396c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[cf3de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[cf3a5c]"></a>zyMsgDel</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
</UL>

<P><STRONG><a name="[cf3a20]"></a>zyMsgAccept</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf38b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[cf38f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[16c2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[cf39e4]"></a>zyMsgPend</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[cf38f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[16c2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[cf39a8]"></a>zyMsgPost</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf37c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[cf38f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[cf3930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[16c2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[cf0f3c]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16bb5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[16bd2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[cf0f00]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16bc1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[cf0ec4]"></a>_sys_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0e88]"></a>_sys_close</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0e4c]"></a>_sys_read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0e10]"></a>_sys_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0dd4]"></a>_sys_ensure</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0d98]"></a>_sys_flen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0d5c]"></a>_sys_seek</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0d20]"></a>_sys_istty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0ce4]"></a>_sys_tmpnam</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0ca8]"></a>_sys_command_string</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0c6c]"></a>clock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0c30]"></a>time</STRONG> (Thumb, 24 bytes, Stack size 56 bytes, rt_sys_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[cf0bf4]"></a>remove</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0bb8]"></a>rename</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf0b7c]"></a>system</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[cf02d0]"></a>OSMboxAccept</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[cf0294]"></a>OSMboxCreate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf0000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[156a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbShedInit
</UL>

<P><STRONG><a name="[cf0258]"></a>OSMboxDel</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
</UL>

<P><STRONG><a name="[cf021c]"></a>OSMboxPend</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[cf00b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
</UL>
<BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
</UL>

<P><STRONG><a name="[cf01e0]"></a>OSMboxPost</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[cf01a4]"></a>OSMboxPostOpt</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>

<P><STRONG><a name="[cf0168]"></a>OSMboxQuery</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[cf396c]"></a>OSMemCreate</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf3a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
</UL>

<P><STRONG><a name="[cf3930]"></a>OSMemGet</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf39a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
</UL>

<P><STRONG><a name="[cf38f4]"></a>OSMemPut</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf39a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
<LI><a href="#[cf39e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
<LI><a href="#[cf3a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[cefc40]"></a>OSMemQuery</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[cefc04]"></a>OS_MemInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, os_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cf38b8]"></a>OSQAccept</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf3a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[cf387c]"></a>OSQCreate</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf0000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[156a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbShedInit
</UL>

<P><STRONG><a name="[cf3840]"></a>OSQDel</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgDel
<LI><a href="#[cf3a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
</UL>

<P><STRONG><a name="[cef2a4]"></a>OSQFlush</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[cf3804]"></a>OSQPend</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[cf00b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
</UL>
<BR>[Called By]<UL><LI><a href="#[cf39e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
<LI><a href="#[156a49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbSheduler
</UL>

<P><STRONG><a name="[cef268]"></a>OSQPost</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostException
<LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
</UL>

<P><STRONG><a name="[cef22c]"></a>OSQPostFront</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>

<P><STRONG><a name="[cf37c8]"></a>OSQPostOpt</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf39a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
</UL>

<P><STRONG><a name="[cef1f0]"></a>OSQQuery</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[cef1b4]"></a>OS_QInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_QInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cf3714]"></a>OSSemAccept</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf3b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemAccept
</UL>

<P><STRONG><a name="[cf36d8]"></a>OSSemCreate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf0000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemCreate
<LI><a href="#[cf8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAT_filesystem_initialiation
<LI><a href="#[1569c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boInit
<LI><a href="#[156a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbShedInit
</UL>

<P><STRONG><a name="[cf369c]"></a>OSSemDel</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemDel
<LI><a href="#[1569bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boDeInit
<LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
</UL>

<P><STRONG><a name="[cf3660]"></a>OSSemPend</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[cf00b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemPend
<LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[15649e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;volume_inquiry
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
<LI><a href="#[1564bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_seek
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
</UL>

<P><STRONG><a name="[cf3624]"></a>OSSemPost</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[cf0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemPost
<LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[15649e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;volume_inquiry
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
<LI><a href="#[1564bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_seek
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
</UL>

<P><STRONG><a name="[ceedb8]"></a>OSSemQuery</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)

<P><STRONG><a name="[ceea34]"></a>OSTaskChangePrio</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[cf3570]"></a>OSTaskCreate</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[cee7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
<LI><a href="#[156a460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCreateShedTask
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[cf8ebc]"></a>OSTaskCreateExt</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cee728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[cee7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[16c256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cede40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[cede7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK0
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf3534]"></a>OSTaskDel</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OSTaskDel &rArr; OS_FlagUnlink
</UL>
<BR>[Calls]<UL><LI><a href="#[cee764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[cee7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[cee818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
<LI><a href="#[156a49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbSheduler
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156e45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskEntry
</UL>

<P><STRONG><a name="[cee9f8]"></a>OSTaskDelReq</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[cf34f8]"></a>OSTaskResume</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadResume
</UL>

<P><STRONG><a name="[cee9bc]"></a>OSTaskStkChk</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[cf34bc]"></a>OSTaskSuspend</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadSuspendSelf
</UL>

<P><STRONG><a name="[cee980]"></a>OSTaskQuery</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c2710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[cf8e80]"></a>OSTimeDly</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[ced648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[ced738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[cee32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[cf3c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDelay
<LI><a href="#[cf8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK0
<LI><a href="#[cf9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK1
<LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
<LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
<LI><a href="#[1569ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostLunInit
<LI><a href="#[1569f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rbcDeInit
<LI><a href="#[156a280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostNotifyExitStdOpera
<LI><a href="#[156a2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostNotifyExitDataOpera
<LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
<LI><a href="#[156a3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbInitHardware
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciPortClose
<LI><a href="#[156ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit2
<LI><a href="#[156ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciPortOpen
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
</UL>

<P><STRONG><a name="[cee32c]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[156ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit2
<LI><a href="#[156ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciPortOpen
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
</UL>

<P><STRONG><a name="[cee2f0]"></a>OSTimeDlyResume</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[cee2b4]"></a>OSTimeGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[cee278]"></a>OSTimeSet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[ced738]"></a>OS_TaskStat</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ced3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[ced6fc]"></a>OS_TaskIdle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ced42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[cf8f34]"></a>OSInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ced378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[ced558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[ced594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
<LI><a href="#[cedd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[cedd8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[ceddc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[cede04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[cede40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[cede7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[cef1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[cefc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[ced6c0]"></a>OSIntEnter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf5fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
<LI><a href="#[cf8a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostException
</UL>

<P><STRONG><a name="[ced684]"></a>OSIntExit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[ced51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
</UL>
<BR>[Called By]<UL><LI><a href="#[cf5fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
<LI><a href="#[cf8a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostException
</UL>

<P><STRONG><a name="[cf378c]"></a>OSSchedLock</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[cf3d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[ceffc4]"></a>OS_Sched</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cee2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[ceea34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[cef22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[cef268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[cf01a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[cf01e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[cf0258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[cf34bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[cf34f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf369c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[cf3750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[cf37c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[cf3804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[cf3840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[15707fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[1570838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[1570874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[cf3750]"></a>OSSchedUnlock</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[cf3d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[cf8ef8]"></a>OSStart</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OSStart &rArr; OSStartHighRdy &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[ced4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[ced648]"></a>OSStatInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[ced60c]"></a>OSTimeTick</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ced3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[cf5fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
</UL>

<P><STRONG><a name="[ced5d0]"></a>OSVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[cee7a0]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[cf0078]"></a>OS_EventTaskRdy</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cef22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[cef268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[cf01a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[cf01e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[cf0258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf369c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[cf37c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[cf3840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
</UL>

<P><STRONG><a name="[cf003c]"></a>OS_EventTaskWait</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf3804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>

<P><STRONG><a name="[cf00b4]"></a>OS_EventTO</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf3804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>

<P><STRONG><a name="[cf0000]"></a>OS_EventWaitListInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf0294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[cf36d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[cf387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>

<P><STRONG><a name="[cee728]"></a>OS_TCBInit</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ced468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[ced4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[15708ec]"></a>OSFlagAccept</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[15708b0]"></a>OSFlagCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[cee764]"></a>OS_FlagUnlink</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[ced0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1570838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[1570874]"></a>OSFlagDel</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ced0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[1570838]"></a>OSFlagPend</STRONG> (Thumb, 532 bytes, Stack size 64 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ced0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[cee764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[15707fc]"></a>OSFlagPost</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ced0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[ceffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[15707c0]"></a>OSFlagQuery</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[ced378]"></a>OS_FlagInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cf5fdc]"></a>__sysTickIsr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __sysTickIsr &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ced60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[ced684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[ced6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[ced4e0]"></a>OSStartHighRdy</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSStartHighRdy &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[cf891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[156e588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[ced51c]"></a>OSIntCtxSw</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ced684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[cee7dc]"></a>OSTaskStkInit</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[156b2ac]"></a>usbMemCopy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156a640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbInterfaceEpConfig
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
</UL>

<P><STRONG><a name="[156b270]"></a>usbMemSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
<LI><a href="#[1569ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boGetMaxLun
<LI><a href="#[1569d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcTestUintReady
<LI><a href="#[1569d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcWrite10
<LI><a href="#[1569d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRead10
<LI><a href="#[1569dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcStartStopUnit
<LI><a href="#[1569e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcReadCapacity
<LI><a href="#[1569e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcInquiry
<LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156a118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetInterface
<LI><a href="#[156a154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetInterface
<LI><a href="#[156a190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetConfiguratiton
<LI><a href="#[156a208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetFeature
<LI><a href="#[156a244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetStatus
<LI><a href="#[156a334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbdInit
<LI><a href="#[156a58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetAddress
<LI><a href="#[156a604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDescription
<LI><a href="#[156a67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetConfiguratiton
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
<LI><a href="#[156aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbAllocCtrlBuffer
<LI><a href="#[156ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit2
<LI><a href="#[156b1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdTdInit
</UL>

<P><STRONG><a name="[156b234]"></a>__usbDelay1ms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156b1f8]"></a>__hcdEdInit</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156b144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdInit
</UL>

<P><STRONG><a name="[156b1bc]"></a>__hcdTdInit</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156b144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdInit
</UL>

<P><STRONG><a name="[156b180]"></a>__hcdAllocBufferInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156b144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdInit
</UL>

<P><STRONG><a name="[156b144]"></a>__hcdInit</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156b180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAllocBufferInit
<LI><a href="#[156b1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdTdInit
<LI><a href="#[156b1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[156b108]"></a>__hcdGetEdInfo</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
<LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[156b0cc]"></a>__hcdGetTdType</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[156b090]"></a>__hcdAllocTd</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
</UL>

<P><STRONG><a name="[156b054]"></a>__hcdFreeTd</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
</UL>

<P><STRONG><a name="[156b018]"></a>__hcdFreeAllTd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
<LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[156afdc]"></a>__hcdAddTd</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
</UL>

<P><STRONG><a name="[156afa0]"></a>__hcdGetEdPtr</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156adfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEnableEd
<LI><a href="#[156aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdClearSkip
<LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
</UL>

<P><STRONG><a name="[156af64]"></a>__usbGetFrameNumber</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156af28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcWaitNextFrame
</UL>

<P><STRONG><a name="[156af28]"></a>__hcWaitNextFrame</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156af64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbGetFrameNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[156abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedAndWaitNextFrame
<LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
</UL>

<P><STRONG><a name="[156aeec]"></a>__usbEdSetSkipAndWaitNextFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156af28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcWaitNextFrame
<LI><a href="#[156afa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
</UL>

<P><STRONG><a name="[156aeb0]"></a>__usbEdClearSkip</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156afa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
</UL>

<P><STRONG><a name="[156ae74]"></a>__hcdIsEdHeadEquTail</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156ae38]"></a>__hcdEdLetHeadEquTail</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
<LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[156adfc]"></a>__hcdEnableEd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156afa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdPtr
</UL>

<P><STRONG><a name="[156adc0]"></a>__ohciEnableInt</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
</UL>

<P><STRONG><a name="[156ad84]"></a>__ohciInit</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[cef268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156adc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciEnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[156ad48]"></a>__ohciPortOpen</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[156ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit2
</UL>

<P><STRONG><a name="[156ad0c]"></a>__ohciInit2</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciPortOpen
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[156acd0]"></a>__ohciDisEnInt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, host.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostException
</UL>

<P><STRONG><a name="[156ac94]"></a>__ohciDisEnIntAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156ac58]"></a>__hcEnableSchedule</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
<LI><a href="#[156ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableAndStartSchedule
</UL>

<P><STRONG><a name="[156ac1c]"></a>__hcDisEnSchedule</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedAndWaitNextFrame
</UL>

<P><STRONG><a name="[156abe0]"></a>__hcDisEnSchedAndWaitNextFrame</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedule
<LI><a href="#[156af28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcWaitNextFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeClose
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156aba4]"></a>__hcStartSchedule</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
<LI><a href="#[156ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableAndStartSchedule
</UL>

<P><STRONG><a name="[156ab68]"></a>__hcEnableAndStartSchedule</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcStartSchedule
<LI><a href="#[156ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableSchedule
</UL>

<P><STRONG><a name="[156ab2c]"></a>__ohciPortClose</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[156a2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostDeInit
</UL>

<P><STRONG><a name="[156aaf0]"></a>__ohciAffirmAttach</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[156aab4]"></a>usbBusReset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156aa78]"></a>usbBusSusp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156aa3c]"></a>usbBusResume</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156aa00]"></a>__usbAllocCtrlBuffer</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
</UL>

<P><STRONG><a name="[156a9c4]"></a>__usbAllocGenBuffer</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
</UL>

<P><STRONG><a name="[156a988]"></a>__usbFreeCtrlBuffer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
</UL>

<P><STRONG><a name="[156a94c]"></a>__usbFreeGenBuffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
</UL>

<P><STRONG><a name="[156a910]"></a>__usbFreeAllCtrlBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
</UL>

<P><STRONG><a name="[156a8d4]"></a>__usbFreeAllGenBuffer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
</UL>

<P><STRONG><a name="[156a898]"></a>__usbDoneHeadDeal</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf01e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
<LI><a href="#[156b018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeAllTd
<LI><a href="#[156b0cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetTdType
<LI><a href="#[156b108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[156a49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbSheduler
</UL>

<P><STRONG><a name="[156a85c]"></a>usbGetEpMaxPktSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
</UL>

<P><STRONG><a name="[156a820]"></a>usbGetEp</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
</UL>

<P><STRONG><a name="[156a7e4]"></a>usbPipeOpen</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetEp
<LI><a href="#[156a85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetEpMaxPktSize
<LI><a href="#[156ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableSchedule
</UL>
<BR>[Called By]<UL><LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[1569fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEnumDeal
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156a7a8]"></a>__usbCtrlTranPhase_Out</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[156aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcStartSchedule
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
<LI><a href="#[156aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdClearSkip
<LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
<LI><a href="#[156afdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAddTd
<LI><a href="#[156b018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeAllTd
<LI><a href="#[156b090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAllocTd
<LI><a href="#[156b108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
</UL>

<P><STRONG><a name="[156a76c]"></a>__usbCtrlTranPhase_In</STRONG> (Thumb, 298 bytes, Stack size 80 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[156a910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbFreeAllCtrlBuffer
<LI><a href="#[156a988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbFreeCtrlBuffer
<LI><a href="#[156aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbAllocCtrlBuffer
<LI><a href="#[156aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcStartSchedule
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
<LI><a href="#[156aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdClearSkip
<LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
<LI><a href="#[156afdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAddTd
<LI><a href="#[156b018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeAllTd
<LI><a href="#[156b054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeTd
<LI><a href="#[156b090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAllocTd
<LI><a href="#[156b108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdInfo
<LI><a href="#[156b2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
</UL>

<P><STRONG><a name="[156a730]"></a>__usbCtrlTranPhase_Setup</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[156a988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbFreeCtrlBuffer
<LI><a href="#[156aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbAllocCtrlBuffer
<LI><a href="#[156aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcStartSchedule
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
<LI><a href="#[156aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdClearSkip
<LI><a href="#[156aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdSetSkipAndWaitNextFrame
<LI><a href="#[156afdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAddTd
<LI><a href="#[156b018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeAllTd
<LI><a href="#[156b090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAllocTd
<LI><a href="#[156b108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdInfo
<LI><a href="#[156b2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
</UL>

<P><STRONG><a name="[156a6f4]"></a>usbStandardReqTransfer</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[156a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Setup
<LI><a href="#[156a76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_In
<LI><a href="#[156a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCtrlTranPhase_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[1569ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boGetMaxLun
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156a118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetInterface
<LI><a href="#[156a154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetInterface
<LI><a href="#[156a190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetConfiguratiton
<LI><a href="#[156a208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetFeature
<LI><a href="#[156a244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetStatus
<LI><a href="#[156a58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetAddress
<LI><a href="#[156a604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDescription
<LI><a href="#[156a67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetConfiguratiton
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
</UL>

<P><STRONG><a name="[156a6b8]"></a>usbClearFeature</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
<LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156a5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbGetDevString
</UL>

<P><STRONG><a name="[156a67c]"></a>usbSetConfiguratiton</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156a640]"></a>usbInterfaceEpConfig</STRONG> (Thumb, 774 bytes, Stack size 64 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156b2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156a604]"></a>usbGetDescription</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
<LI><a href="#[156a5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbGetDevString
</UL>

<P><STRONG><a name="[156a5c8]"></a>__usbGetDevString</STRONG> (Thumb, 310 bytes, Stack size 64 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDescription
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156a58c]"></a>usbSetAddress</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[156a550]"></a>__taskUsbEnum</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156a58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetAddress
<LI><a href="#[156a5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbGetDevString
<LI><a href="#[156a604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDescription
<LI><a href="#[156a640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbInterfaceEpConfig
<LI><a href="#[156a67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbSetConfiguratiton
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
<LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
<LI><a href="#[156aab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbBusReset
<LI><a href="#[156abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedAndWaitNextFrame
<LI><a href="#[156ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableSchedule
<LI><a href="#[156adc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciEnableInt
<LI><a href="#[156b2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemCopy
<LI><a href="#[16c256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[156a514]"></a>usbPipeClose</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedAndWaitNextFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
</UL>

<P><STRONG><a name="[156a4d8]"></a>__usbConectChange</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156a514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeClose
<LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
<LI><a href="#[156aaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciAffirmAttach
<LI><a href="#[156ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit2
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
<LI><a href="#[156b144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdInit
</UL>
<BR>[Called By]<UL><LI><a href="#[156a49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbSheduler
</UL>

<P><STRONG><a name="[156a49c]"></a>__taskUsbSheduler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[cf3804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[156a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbConectChange
<LI><a href="#[156a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDoneHeadDeal
</UL>

<P><STRONG><a name="[156a460]"></a>__usbCreateShedTask</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
</UL>

<P><STRONG><a name="[156a424]"></a>__usbHostIntInit</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
</UL>

<P><STRONG><a name="[156a3e8]"></a>__USBHostEnable</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156df70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbPllConfig
<LI><a href="#[156dfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbHostPinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[156a3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbInitHardware
</UL>

<P><STRONG><a name="[156a3ac]"></a>__usbInitHardware</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156a3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__USBHostEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
</UL>

<P><STRONG><a name="[156a370]"></a>__usbShedInit</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf0294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[cf36d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[cf387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
</UL>

<P><STRONG><a name="[156a334]"></a>__usbdInit</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[cf89d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostInitialize
</UL>

<P><STRONG><a name="[cf89d0]"></a>usbHostInitialize</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbdInit
<LI><a href="#[156a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbShedInit
<LI><a href="#[156a3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbInitHardware
<LI><a href="#[156a424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbHostIntInit
<LI><a href="#[156a460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbCreateShedTask
<LI><a href="#[156ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciInit
<LI><a href="#[156b144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTestInit
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[156a2f8]"></a>usbHostDeInit</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cef268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[cf0258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[cf369c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[cf3840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[156ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciPortClose
</UL>

<P><STRONG><a name="[156a2bc]"></a>usbHostNotifyExitDataOpera</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[156a280]"></a>usbHostNotifyExitStdOpera</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[156a244]"></a>usbGetStatus</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[156a208]"></a>usbSetFeature</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[156a1cc]"></a>usbSetDescription</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156a190]"></a>usbGetConfiguratiton</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[156a154]"></a>usbGetInterface</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[156a118]"></a>usbSetInterface</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[156a0dc]"></a>usbSunchFrame</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[cf8994]"></a>usbIsDeviceReady</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
<LI><a href="#[156a064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDeviceType
</UL>

<P><STRONG><a name="[156a0a0]"></a>usbIsDeviceAttach</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[156a064]"></a>usbGetDeviceType</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbIsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
</UL>

<P><STRONG><a name="[156a028]"></a>usbGetVer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, host.o(.text), UNUSED)

<P><STRONG><a name="[1569fec]"></a>__usbEnumDeal</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
</UL>

<P><STRONG><a name="[1569fb0]"></a>usbDataTransfer</STRONG> (Thumb, 492 bytes, Stack size 96 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf021c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf8994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbIsDeviceReady
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
<LI><a href="#[156a7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbPipeOpen
<LI><a href="#[156a820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetEp
<LI><a href="#[156a8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbFreeAllGenBuffer
<LI><a href="#[156a94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbFreeGenBuffer
<LI><a href="#[156a9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbAllocGenBuffer
<LI><a href="#[156aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcStartSchedule
<LI><a href="#[156abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcDisEnSchedAndWaitNextFrame
<LI><a href="#[156ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcEnableSchedule
<LI><a href="#[156ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdEdLetHeadEquTail
<LI><a href="#[156aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbEdClearSkip
<LI><a href="#[156afdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAddTd
<LI><a href="#[156b018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeAllTd
<LI><a href="#[156b054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdFreeTd
<LI><a href="#[156b090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdAllocTd
<LI><a href="#[156b108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hcdGetEdInfo
<LI><a href="#[156b2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
</UL>

<P><STRONG><a name="[cf8a0c]"></a>usbHostException</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, host.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbHostException &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[ced684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[ced6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[cef268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[156acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ohciDisEnInt
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[1569f74]"></a>__rbcInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
</UL>

<P><STRONG><a name="[1569f38]"></a>__rbcDeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostDeInit
</UL>

<P><STRONG><a name="[1569efc]"></a>__boMassStorReset</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
<LI><a href="#[1569d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcTestUintReady
<LI><a href="#[1569d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcWrite10
<LI><a href="#[1569d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRead10
<LI><a href="#[1569dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcStartStopUnit
<LI><a href="#[1569e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcReadCapacity
<LI><a href="#[1569e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcInquiry
</UL>

<P><STRONG><a name="[1569ec0]"></a>__boSendCommand</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf8994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbIsDeviceReady
<LI><a href="#[1569fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDataTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1569d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcTestUintReady
<LI><a href="#[1569d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcWrite10
<LI><a href="#[1569d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRead10
<LI><a href="#[1569dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcStartStopUnit
<LI><a href="#[1569e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcReadCapacity
<LI><a href="#[1569e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcInquiry
<LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
</UL>

<P><STRONG><a name="[1569e84]"></a>rbcRequestSense</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
<LI><a href="#[16c256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1569d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcTestUintReady
<LI><a href="#[1569d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcWrite10
<LI><a href="#[1569d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRead10
<LI><a href="#[1569e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcReadCapacity
<LI><a href="#[1569e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcInquiry
</UL>

<P><STRONG><a name="[1569e48]"></a>rbcInquiry</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostLunInit
</UL>

<P><STRONG><a name="[1569e0c]"></a>rbcReadCapacity</STRONG> (Thumb, 314 bytes, Stack size 64 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostLunInit
</UL>

<P><STRONG><a name="[1569dd0]"></a>rbcStartStopUnit</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>

<P><STRONG><a name="[1569d94]"></a>rbcRead10</STRONG> (Thumb, 570 bytes, Stack size 72 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>

<P><STRONG><a name="[1569d58]"></a>rbcWrite10</STRONG> (Thumb, 544 bytes, Stack size 72 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
</UL>

<P><STRONG><a name="[1569d1c]"></a>rbcTestUintReady</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[1569ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boSendCommand
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
</UL>

<P><STRONG><a name="[1569ce0]"></a>__msHostLunInit</STRONG> (Thumb, 114 bytes, Stack size 72 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1569e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcReadCapacity
<LI><a href="#[1569e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcInquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostInit
</UL>

<P><STRONG><a name="[1569ca4]"></a>__boGetMaxLun</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156a6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbStandardReqTransfer
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
</UL>

<P><STRONG><a name="[1569c68]"></a>__boInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf36d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
</UL>

<P><STRONG><a name="[1569c2c]"></a>__msHostDeviceInit</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1569c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boInit
<LI><a href="#[1569ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boGetMaxLun
<LI><a href="#[1569d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcTestUintReady
<LI><a href="#[1569efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boMassStorReset
<LI><a href="#[1569f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rbcInit
<LI><a href="#[156a064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbGetDeviceType
<LI><a href="#[156a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbClearFeature
<LI><a href="#[156b270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostInit
</UL>

<P><STRONG><a name="[cf8bb0]"></a>msHostInit</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostDeviceInit
<LI><a href="#[1569ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__msHostLunInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1569bf0]"></a>__boDeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf369c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msHostDeInit
</UL>

<P><STRONG><a name="[cf8bec]"></a>msHostDeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, host.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__boDeInit
<LI><a href="#[1569f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rbcDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8a84]"></a>uart0Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK1
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1567bd4]"></a>uart0ByteSend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0StrSend
</UL>

<P><STRONG><a name="[cf8a48]"></a>uart0StrSend</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1567bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0ByteSend
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTestInit
<LI><a href="#[cf90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevDisconCallBack
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1564f4c]"></a>read_flash_sector</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRead10
</UL>
<BR>[Called By]<UL><LI><a href="#[15649e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;volume_inquiry
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_An_Empty_cluster
<LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[1564e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp_direct
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
<LI><a href="#[15672b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_Space_to_Write_Directory_Entry
<LI><a href="#[1567328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION
<LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
<LI><a href="#[1567544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_partition_PBP
<LI><a href="#[15675f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeClusterChain
<LI><a href="#[1567634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Previous_Cluster_From_Current_Cluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>

<P><STRONG><a name="[1564f10]"></a>write_flash_sector</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1569d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcWrite10
</UL>
<BR>[Called By]<UL><LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_An_Empty_cluster
<LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[1564e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp_direct
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
<LI><a href="#[15675f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeClusterChain
</UL>

<P><STRONG><a name="[1564ed4]"></a>write_time_stamp</STRONG> (Thumb, 294 bytes, Stack size 536 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15649ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
<LI><a href="#[1564bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_seek
</UL>

<P><STRONG><a name="[1564e98]"></a>write_time_stamp_direct</STRONG> (Thumb, 196 bytes, Stack size 536 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15649ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
</UL>

<P><STRONG><a name="[1564e5c]"></a>Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN</STRONG> (Thumb, 1252 bytes, Stack size 64 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1567328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION
</UL>

<P><STRONG><a name="[1564e20]"></a>Allocate_An_Empty_cluster</STRONG> (Thumb, 834 bytes, Stack size 48 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
</UL>
<BR>[Called By]<UL><LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
</UL>

<P><STRONG><a name="[1564de4]"></a>get_gb2312_from_unicode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
</UL>

<P><STRONG><a name="[1564da8]"></a>Check_FileOpened_Status</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
</UL>

<P><STRONG><a name="[1564d6c]"></a>Writeback_FCB_file_buffer</STRONG> (Thumb, 1072 bytes, Stack size 560 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_An_Empty_cluster
<LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
</UL>

<P><STRONG><a name="[1564d30]"></a>Update_FCB_file_buffer</STRONG> (Thumb, 606 bytes, Stack size 40 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file
<LI><a href="#[cf8afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_file
<LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[1564bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_seek
</UL>

<P><STRONG><a name="[1564cf4]"></a>Allocate_FCB</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
</UL>

<P><STRONG><a name="[1564cb8]"></a>Free_FCB</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_file
</UL>

<P><STRONG><a name="[cf8f70]"></a>FAT_filesystem_initialiation</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf36d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[1567544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_partition_PBP
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8b74]"></a>open_file</STRONG> (Thumb, 506 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_FCB
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_FileOpened_Status
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8cdc]"></a>close_file</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_FCB
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1564c7c]"></a>Lengthof_CHN_String</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
<LI><a href="#[1567274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_LFN_Directory_Entry
</UL>

<P><STRONG><a name="[1564c40]"></a>get_pos_in_table_about_unicode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1567274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_LFN_Directory_Entry
</UL>

<P><STRONG><a name="[1564c04]"></a>determine_pos</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
</UL>

<P><STRONG><a name="[cf8ca0]"></a>create_file</STRONG> (Thumb, 262 bytes, Stack size 288 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8c64]"></a>create_floder</STRONG> (Thumb, 254 bytes, Stack size 288 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1564bc8]"></a>f_seek</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
</UL>

<P><STRONG><a name="[cf8afc]"></a>read_file</STRONG> (Thumb, 604 bytes, Stack size 40 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8958]"></a>write_file</STRONG> (Thumb, 990 bytes, Stack size 40 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[cf8d18]"></a>cd_folder</STRONG> (Thumb, 550 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1564b8c]"></a>delete_file</STRONG> (Thumb, 184 bytes, Stack size 520 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_FileOpened_Status
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15675f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeClusterChain
</UL>

<P><STRONG><a name="[1564b50]"></a>delete_folder</STRONG> (Thumb, 158 bytes, Stack size 528 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[15675f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeClusterChain
</UL>

<P><STRONG><a name="[1564b14]"></a>rename_file</STRONG> (Thumb, 502 bytes, Stack size 1080 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_FileOpened_Status
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
<LI><a href="#[156779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPCASE
</UL>

<P><STRONG><a name="[1564ad8]"></a>save_enum_vars</STRONG> (Thumb, 334 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
</UL>

<P><STRONG><a name="[1564a9c]"></a>restore_enum_vars</STRONG> (Thumb, 334 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
</UL>

<P><STRONG><a name="[cf8c28]"></a>folder_enumeration</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[1564a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_enum_vars
<LI><a href="#[1564ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_enum_vars
<LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[1564a60]"></a>disk_enumeration</STRONG> (Thumb, 302 bytes, Stack size 136 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_enum_vars
<LI><a href="#[1564ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_enum_vars
<LI><a href="#[15670d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__
<LI><a href="#[156710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__folder_for_disk_enum
<LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
</UL>

<P><STRONG><a name="[1564a24]"></a>find_file</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15676ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcmp
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>

<P><STRONG><a name="[15649e8]"></a>volume_inquiry</STRONG> (Thumb, 480 bytes, Stack size 544 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf3624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[cf3660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>

<P><STRONG><a name="[15649ac]"></a>get_time</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, time.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1564e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp_direct
<LI><a href="#[1564ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp
</UL>

<P><STRONG><a name="[ced594]"></a>OSInitHookBegin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osinithookbegin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[ced558]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osinithookend.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[ced468]"></a>OSTaskCreateHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostaskcreatehook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cee728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[cee818]"></a>OSTaskDelHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostaskdelhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf3534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[ced42c]"></a>OSTaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskidlehook.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ced6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[ced3f0]"></a>OSTaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskstathook.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ced738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[156e420]"></a>OSTaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskswhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf6018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_OSCtxSw
<LI><a href="#[156e54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_OSStartHighRdy
</UL>

<P><STRONG><a name="[ced4a4]"></a>OSTCBInitHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostcbinithook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cee728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[ced3b4]"></a>OSTimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostimetickhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ced60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[16c61a8]"></a>__semihosting$guard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16c616c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16c5d70]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c1888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[16c1b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[16c5c08]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[16c1b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[16be2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[16c4498]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[16c0c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cf9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbHostTest
<LI><a href="#[cf9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnumSucessCallBack
</UL>

<P><STRONG><a name="[16c3fac]"></a>_printf_int_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[16c0dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[16c2a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[16c3f70]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[16c3250]"></a>__printf</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, __printf_flags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c29a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[16c0c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[16c2878]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf39a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
<LI><a href="#[cf39e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
<LI><a href="#[cf3a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[16c283c]"></a>__rt_memcpy</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c2710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[16c2800]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[16c2710]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cee980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[16c283c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[16c26d4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16c2698]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16c265c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16c256c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[1569e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbcRequestSense
<LI><a href="#[156a550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__taskUsbEnum
</UL>

<P><STRONG><a name="[16c2530]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[16c24f4]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[16c24b8]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[16c238c]"></a>mktime</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c23c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[cf0c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time
</UL>

<P><STRONG><a name="[16c1b58]"></a>__rt_heap_descriptor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16c5c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[16c5d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[16c1a2c]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[16c19f0]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[16c1900]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[16c18c4]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[16c1888]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16bdc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[16be2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[16c5d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[16c184c]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16bdf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16c1810]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[16bdc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[16bdc88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_escrow
<LI><a href="#[16bdf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[16be2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[16c1414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[16c1b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[16bfe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[16c1414]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[16c13d8]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[16c0dfc]"></a>_printf_int_common</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[16c3fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[16c0c58]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c3250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[16c0b2c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[16bee1c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16bede0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16bd88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16beda4]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16be2a0]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[16c5c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16c1888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[16bdf94]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[16bd1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[16bd2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16c184c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[16bdc88]"></a>__rt_heap_escrow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, heapauxa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[16bdc4c]"></a>__rt_heap_expand</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, heapauxa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __rt_heap_expand
</UL>
<BR>[Called By]<UL><LI><a href="#[16c1810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16c1888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[16bd88c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[cf31b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[16bede0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[16be78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[16bd454]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16bc6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16be9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[16bd2ec]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf0f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16bdf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16bd1fc]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[16bc1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[16bdf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16bc1d0]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[cf0f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[16bd1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[cf31b0]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_sys_s.o(rt_sys))
<BR><BR>[Called By]<UL><LI><a href="#[16bd88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[cede7c]"></a>OS_InitTaskStat</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cede40]"></a>OS_InitTaskIdle</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cede04]"></a>OS_InitEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[ceddc8]"></a>OS_InitTCBList</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cedd8c]"></a>OS_InitRdyList</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[cedd50]"></a>OS_InitMisc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[ced0e4]"></a>OS_FlagTaskRdy</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cee764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[15707fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[1570874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[ced0a8]"></a>OS_FlagBlock</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1570838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[156dfac]"></a>__usbHostPinInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__USBHostEnable
</UL>

<P><STRONG><a name="[156df70]"></a>__usbPllConfig</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, host.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[156a3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__USBHostEnable
</UL>

<P><STRONG><a name="[156779c]"></a>UPCASE</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15676ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcmp
</UL>

<P><STRONG><a name="[1567760]"></a>LengthofString</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[15670d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__
<LI><a href="#[156710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__folder_for_disk_enum
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
<LI><a href="#[1567724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;concanenateString
</UL>

<P><STRONG><a name="[1567724]"></a>concanenateString</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
</UL>

<P><STRONG><a name="[15676e8]"></a>stringcpy</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[cf8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAT_filesystem_initialiation
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
</UL>

<P><STRONG><a name="[15676ac]"></a>stringcmp</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPCASE
</UL>
<BR>[Called By]<UL><LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[15670d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__
<LI><a href="#[15673dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindEntryStruct
</UL>

<P><STRONG><a name="[1567670]"></a>Get_Next_Cluster_From_Current_Cluster</STRONG> (Thumb, 220 bytes, Stack size 528 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[1567328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
</UL>

<P><STRONG><a name="[1567634]"></a>Get_Previous_Cluster_From_Current_Cluster</STRONG> (Thumb, 226 bytes, Stack size 536 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
</UL>

<P><STRONG><a name="[15675f8]"></a>FreeClusterChain</STRONG> (Thumb, 662 bytes, Stack size 544 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
</UL>

<P><STRONG><a name="[15675bc]"></a>FirstSectorofCluster</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_FCB_file_buffer
<LI><a href="#[1564d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writeback_FCB_file_buffer
<LI><a href="#[1564e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_An_Empty_cluster
<LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[156710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__folder_for_disk_enum
<LI><a href="#[1567148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remove_LONGFILENAME
<LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
<LI><a href="#[15672b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_Space_to_Write_Directory_Entry
<LI><a href="#[1567328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION
<LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15673a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelativePathToSectorCluster
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
</UL>

<P><STRONG><a name="[1567580]"></a>BPB_INIT_2</STRONG> (Thumb, 780 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1567544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_partition_PBP
</UL>

<P><STRONG><a name="[1567544]"></a>Read_partition_PBP</STRONG> (Thumb, 564 bytes, Stack size 520 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[1567580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BPB_INIT_2
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAT_filesystem_initialiation
</UL>

<P><STRONG><a name="[1567508]"></a>SplitNameFromPath</STRONG> (Thumb, 200 bytes, Stack size 20 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15673a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelativePathToSectorCluster
</UL>

<P><STRONG><a name="[15674cc]"></a>CORE_offset_add_32</STRONG> (Thumb, 1072 bytes, Stack size 8 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
<LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
<LI><a href="#[1567490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWith8_3Name
</UL>

<P><STRONG><a name="[1567490]"></a>GetEntryWith8_3Name</STRONG> (Thumb, 360 bytes, Stack size 32 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
</UL>
<BR>[Called By]<UL><LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
</UL>

<P><STRONG><a name="[1567454]"></a>GetEntryWithLongFileName</STRONG> (Thumb, 986 bytes, Stack size 312 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gb2312_from_unicode
<LI><a href="#[1567490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWith8_3Name
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
</UL>

<P><STRONG><a name="[1567418]"></a>GetEntryFromDirectory</STRONG> (Thumb, 1064 bytes, Stack size 536 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[1567454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWithLongFileName
<LI><a href="#[1567490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryWith8_3Name
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;folder_enumeration
<LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[15670d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__
<LI><a href="#[15673dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindEntryStruct
</UL>

<P><STRONG><a name="[15673dc]"></a>FindEntryStruct</STRONG> (Thumb, 108 bytes, Stack size 296 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[15676ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[15673a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelativePathToSectorCluster
</UL>

<P><STRONG><a name="[15673a0]"></a>RelativePathToSectorCluster</STRONG> (Thumb, 372 bytes, Stack size 296 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15673dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindEntryStruct
<LI><a href="#[1567508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplitNameFromPath
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
</UL>
<BR>[Called By]<UL><LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
</UL>

<P><STRONG><a name="[1567364]"></a>FullPathToSectorCluster</STRONG> (Thumb, 938 bytes, Stack size 280 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15673a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelativePathToSectorCluster
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[15676e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcpy
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
<LI><a href="#[156779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPCASE
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_file
<LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[cf8d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd_folder
<LI><a href="#[1564a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
<LI><a href="#[156710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__folder_for_disk_enum
</UL>

<P><STRONG><a name="[1567328]"></a>CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION</STRONG> (Thumb, 972 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_EMPTY_CLUSTER_TO_CUR_CLUSTER_CHAIN
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Next_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[15672b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_Space_to_Write_Directory_Entry
</UL>

<P><STRONG><a name="[15672ec]"></a>calculate_checksum_longfilenameentry</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
</UL>

<P><STRONG><a name="[15672b0]"></a>Seek_Space_to_Write_Directory_Entry</STRONG> (Thumb, 612 bytes, Stack size 32 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[1567328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32_With_EMPTY_CLUSTER_ALLOCATION
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
</UL>
<BR>[Called By]<UL><LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
</UL>

<P><STRONG><a name="[1567274]"></a>Fill_LFN_Directory_Entry</STRONG> (Thumb, 566 bytes, Stack size 36 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pos_in_table_about_unicode
<LI><a href="#[1564c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lengthof_CHN_String
</UL>
<BR>[Called By]<UL><LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
</UL>

<P><STRONG><a name="[1567238]"></a>Fill_SFN_Directory_Entry</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
</UL>

<P><STRONG><a name="[15671fc]"></a>LFN_convert_to_SFN</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, fat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
</UL>

<P><STRONG><a name="[15671c0]"></a>Write_LongFileName_Entry</STRONG> (Thumb, 524 bytes, Stack size 88 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determine_pos
<LI><a href="#[1564c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lengthof_CHN_String
<LI><a href="#[1564e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp_direct
<LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15671fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LFN_convert_to_SFN
<LI><a href="#[1567274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_LFN_Directory_Entry
<LI><a href="#[15672ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_checksum_longfilenameentry
<LI><a href="#[15674cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_offset_add_32
</UL>
<BR>[Called By]<UL><LI><a href="#[1567184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_A_Directory_Entry_
</UL>

<P><STRONG><a name="[1567184]"></a>Add_A_Directory_Entry_</STRONG> (Thumb, 696 bytes, Stack size 608 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lengthof_CHN_String
<LI><a href="#[1564e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocate_An_Empty_cluster
<LI><a href="#[1564e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_time_stamp_direct
<LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15671c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_LongFileName_Entry
<LI><a href="#[1567238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_SFN_Directory_Entry
<LI><a href="#[15672b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_Space_to_Write_Directory_Entry
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
<LI><a href="#[156779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPCASE
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_floder
<LI><a href="#[cf8ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
</UL>

<P><STRONG><a name="[1567148]"></a>Remove_LONGFILENAME</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1564f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_sector
<LI><a href="#[1564f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_sector
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Previous_Cluster_From_Current_Cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[1564b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file
<LI><a href="#[1564b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_folder
<LI><a href="#[1564b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_file
</UL>

<P><STRONG><a name="[156710c]"></a>cd__folder_for_disk_enum</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1567364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullPathToSectorCluster
<LI><a href="#[15675bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSectorofCluster
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
<LI><a href="#[15670d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__
</UL>

<P><STRONG><a name="[15670d0]"></a>cd__</STRONG> (Thumb, 186 bytes, Stack size 544 bytes, fat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cd__folder_for_disk_enum
<LI><a href="#[1567418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEntryFromDirectory
<LI><a href="#[15676ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringcmp
<LI><a href="#[1567760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthofString
</UL>
<BR>[Called By]<UL><LI><a href="#[1564a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_enumeration
</UL>

<P><STRONG><a name="[16c23c8]"></a>_tm_carry</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[16c0c94]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
